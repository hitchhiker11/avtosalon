---
// src/components/sections/CatalogSection.astro
import CarCard from '../ui/CarCard.astro';
import type { Props as CarCardProps } from '../ui/CarCard.astro';

const API_URL = import.meta.env.API_URL;

let cars: CarCardProps['car'][] = [];
try {
  console.log('API_URL', API_URL);
  const response = await fetch(`http://127.0.0.1:3001/cars`);
  if (response.ok) {
    cars = await response.json();
  } else {
    console.error(`Failed to fetch cars: ${response.status}`);
  }
} catch (error: any) {
  console.error('Error fetching cars:', error.message);
}

const brands = ["Все автомобили", "Mercedes-Benz", "BMW", "Audi", "Porsche", "Ferrari"];
---

<section id="catalog" class="catalog-section">
  <div class="catalog-header">
    <h2>Наш каталог</h2>
    <p>Откройте для себя коллекцию эксклюзивных автомобилей премиум класса, тщательно отобранных для истинных ценителей престижа и качества.</p>
  </div>
  <div class="catalog-filters">
    {brands.map((brand, index) => (
      <button class={`filter-button ${index === 0 ? 'active' : ''}`} data-brand={brand === 'Все автомобили' ? 'all' : brand}>
        {brand}
      </button>
    ))}
  </div>
  <div id="car-grid" class="car-grid">
    {cars.length > 0 ? (
      cars.map(car => <CarCard car={car} />)
    ) : (
      <p class="error-message">Не удалось загрузить каталог. Пожалуйста, убедитесь, что API сервер запущен (npm run api) и попробуйте снова.</p>
    )}
  </div>
  <button class="view-all-button" onclick="document.getElementById('contacts')?.scrollIntoView({behavior: 'smooth'})">Смотреть все автомобили</button>
</section>

<script>
  interface Car {
    id: number;
    brand: string;
    model: string;
    year: number;
    mileage: string;
    engineVolume: string;
    horsePower: string;
    fuelType: string;
    price: string;
    oldPrice?: string;
    imageUrl: string;
  }

  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.filter-button');
    const carCards = document.querySelectorAll<HTMLElement>('.car-card');

    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        filterButtons.forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');

        const selectedBrand = button.getAttribute('data-brand');

        carCards.forEach(card => {
          const cardBrand = card.getAttribute('data-brand');
          if (selectedBrand === 'all' || selectedBrand === cardBrand) {
            card.style.display = 'flex';
          } else {
            card.style.display = 'none';
          }
        });
      });
    });
  });
</script>

<style>
  .catalog-section {
    font-family: 'Inter', sans-serif;
    background: linear-gradient(180deg, #000 0%, #2D1608 100%);
    padding-top: clamp(40px, 7.81vw, 150px);
    padding-bottom: clamp(40px, 4.17vw, 80px);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: clamp(30px, 3.13vw, 60px);
  }

  .catalog-header {
    text-align: center;
    color: #fff;
    display: flex;
    flex-direction: column;
    gap: clamp(8px, 0.83vw, 16px);
    max-width: 1252px;
    padding: 0 20px;
  }

  .catalog-header h2 {
    font-weight: 700;
    font-size: clamp(20.2px, 3.08vw, 59.25px);
    line-height: 1.1;
  }

  .catalog-header p {
    font-weight: 400;
    font-size: clamp(12px, 1.25vw, 23.98px);
    line-height: 1.333;
    color: #D1D5DB;
  }

  .catalog-filters {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: clamp(10px, 0.96vw, 18.39px);
    padding: 0 20px;
  }

  .filter-button {
    background-color: #38281F;
    color: #fff;
    border: none;
    border-radius: clamp(2.5px, 0.3vw, 6px);
    /* border-radius: 3px; */
    padding: clamp(12px, 0.62vw, 23px) clamp(13px, 1.33vw, 25.58px);
    font-weight: 600;
    font-size: clamp(10px, 1.25vw, 20px); /* Standardized with hero button */
    line-height: 1.1; /* Standardized line-height */
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .filter-button.active {
    background-color: #E6512E;
  }

  .filter-button:hover {
    background-color: #4a342a;
  }

  .car-grid {
    width: 100%;
    max-width: 1536px; /* (4 * 317.73) + (3 * 31.77) - Prevents stretching on ultra-wide screens */
    display: flex;
    overflow-x: auto;
    gap: clamp(20px, 1.65vw, 31.77px);
    padding: 0 20px;
    
    /* Hide scrollbar */
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none;  /* IE 10+ */
  }
  .car-grid::-webkit-scrollbar { /* WebKit */
    display: none;
  }

  .error-message {
    color: white;
    width: 100%;
    text-align: center;
  }

  .view-all-button {
    background-color: #E6512E;
    color: #fff;
    border: none;
    border-radius: clamp(2px, 0.2vw, 4px);
    min-height: 45px;
    padding: 0 clamp(20px, 2.08vw, 40px);
    height: clamp(26px, 2.7vw, 52px);
    font-weight: 600;
    font-size: clamp(10px, 1.25vw, 20px);
    line-height: 1.1;
    cursor: pointer;
    transition: background-color 0.3s ease;
    white-space: nowrap;
    min-width: fit-content;
  }

  .view-all-button:hover {
    background-color: #d44926;
  }

  /* Mobile typography standardization with 1.3x scaling */
  @media (max-width: 639px) {
    .catalog-header h2 {
      font-size: clamp(26.26px, 3.08vw, 59.25px); /* 20.2 * 1.3 = 26.26 */
    }
    
    .catalog-header p {
      font-size: clamp(15.6px, 1.25vw, 23.98px); /* 12 * 1.3 = 15.6 */
    }
    
    .filter-button {
      padding: clamp(15.6px, 0.62vw, 23px) clamp(16.9px, 1.33vw, 25.58px); /* 12 * 1.3 = 15.6, 13 * 1.3 = 16.9 */
      font-size: clamp(14px, 1.25vw, 20px); /* Unified with other mobile buttons */
    }
    
    .view-all-button {
      font-size: clamp(14px, 1.25vw, 20px); /* Unified with other mobile buttons */
    }
  }

  @media (min-width: 960px) {
    .catalog-header, .catalog-filters {
      padding: 0 clamp(20px, 10vw, 192px);
    }
    .car-grid {
      padding: 0 clamp(20px, 10vw, 192px);
    }
  }

  @media (max-width: 490px) {
    .catalog-filters {
      width: 100%;
      justify-content: flex-start;
      flex-wrap: nowrap; /* Prevent wrapping */
      overflow-x: auto;
      scrollbar-width: none; /* Firefox */
      -ms-overflow-style: none;  /* IE 10+ */
    }
    .catalog-filters::-webkit-scrollbar { /* WebKit */
      display: none;
    }
    .filter-button {
      flex-shrink: 0; /* Prevent buttons from shrinking */
    }
  }
</style> 